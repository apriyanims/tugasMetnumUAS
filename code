#include<stdlib.h>
#include<math.h>
#include<stdio.h>

float func(float x)
{
    return (1/(1+pow(x,2)));
}

float lagrangeInterpolation(float f_x[], float x[], float x_interpol,int n)
{
      int i, j, num_est;
      float f_interpol = 0;
      printf("Masukan jumlah titik (pasangan x dan f(x)) yang diketahui: ");
      scanf("%d",&n);

      printf("\nMasukan titik yang diketahui (nilai x dan f(x) dipisahkan dengan spasi, contoh: 3 14): \n");
      for(i=0; i< n; i++)
      {
            scanf ("%f",&x[i]);
            scanf("%f",&f_x[i]);
      }

      printf("\n\nBerikut nilai  x dan f(x) yang dimasukan:\n\n");
      for(i=0; i< n; i++)
      {
            printf("%0.4f\t%0.7f",x[i],f_x[i]);
            printf("\n");
      }

      printf("\nMasukan jumlah titik yang digunakan untuk estimasi : ");
      scanf("%d", &num_est);

      printf("\nMasukan nilai x yang akan diestimasi nilai f(x) nya: ");
      scanf("%f",&x_interpol);

      for (i = 0; i < num_est; i++)
      {
            float L = 1;
            for (j = 0; j < num_est; j++)
            {
                  if (i != j)
                  {
                        L *=  (x_interpol - x[j]) / (x[i] - x[j]);
                  }
            }
            f_interpol += L * f_x[i];
      }

      switch(num_est){
            case 2:
                  printf("\nNilai estimasi f(%0.3f) dengan dua titik adalah %0.7f",x_interpol, f_interpol);
                  break;
            
            case 3:
                  printf("\nNilai estimasi f(%0.3f) dengan tiga titik adalah %0.7f",x_interpol, f_interpol);
                  break;
            
            case 5:
                  printf("\nNilai estimasi f(%0.3f) dengan lima titik adalah %0.7f",x_interpol, f_interpol);
                  break;
      }
}

float diffDuaTitik(float f_x[], float x[], int n, float x_diff) 
{
      printf("\nAproksimasi Turunan Fungsi dengan Formula Dua Titik\n");
      printf("___________________________________________________\n\n");
      float h, selisihMaju, selisihMundur; 
      int i, opsi;

      printf("Masukkan nilai h: ");
      scanf("%f", &h);

      printf("Masukan nilai x yang akan diaproksimasi turunannya: ");
      scanf("%f", &x_diff);

      printf("Pilihan formula : \n");
      printf("1. Aproksimasi dengan Selisih Maju\n");
      printf("2. Aproksimasi dengan Selisih Mundur\n\n");
      printf("Masukan nomor pilihan: ");
      scanf("%d", &opsi);

      switch(opsi){
            case 1:
                  selisihMaju = (func(x_diff + h) - func(x_diff))/h;
                  printf("Hasil aproksimasi turunan dari titik %0.3f dengan selisih maju adalah %0.7f", x_diff, selisihMaju);
                  break;

            case 2:
                  selisihMundur = (func(x_diff) - func(x_diff - h))/h;
                  printf("Hasil aproksimasi turunan dari titik %0.3f dengan selisih mundur adalah %0.7f", x_diff, selisihMundur);
                  break;
      }

}

float diffTigaTitik(float f_x[], float x[], int n, float x_diff) 
{
      printf("\nAproksimasi Turunan Fungsi dengan Formula Tiga Titik\n");
      printf("____________________________________________________\n\n");
      float h, diferTigaTitik; 
      int i, opsi;

      printf("Masukkan nilai h: ");
      scanf("%f", &h);

      printf("Masukan nilai x yang akan diaproksimasi turunannya: ");
      scanf("%f", &x_diff);

      printf("Pilihan formula : \n");
      printf("1. Aproksimasi dengan Psi yang Berada di antara (x0 - h) dan (x0 + h)\n");
      printf("2. Aproksimasi dengan Psi yang Berada di antara x0 dan (x0+2h)\n\n");
      printf("Masukan nomor pilihan: ");
      scanf("%d", &opsi);

      switch(opsi){
            case 1:
                  diferTigaTitik = (func(x_diff + h) - func(x_diff - h))/(2*h);
                  printf("Hasil aproksimasi turunan dari titik %0.3f dengan psi yang berada di antara (x0 - h) dan (x0 + h) adalah %0.7f", x_diff, diferTigaTitik);
                  break;

            case 2:
                  diferTigaTitik = (-3*func(x_diff) + 4*func(x_diff + h) - func(x_diff + 2*h))/(2*h);
                  printf("Hasil aproksimasi turunan dari titik %0.3f dengan psi yang berada di antara x0 dan (x0 + 2h) adalah %0.7f", x_diff, diferTigaTitik);
                  break;
      }

}

float diffLimaTitik(float f_x[], float x[], int n, float x_diff) 
{
      printf("\nAproksimasi Turunan Fungsi dengan Formula Lima Titik\n");
      printf("____________________________________________________\n\n");
      float h, diferLimaTitik; 
      int i, opsi;

      printf("Masukkan nilai h: ");
      scanf("%f", &h);

      printf("Masukan nilai x yang akan diaproksimasi turunannya: ");
      scanf("%f", &x_diff);

      printf("Pilihan formula : \n");
      printf("1. Aproksimasi dengan Psi yang Berada di antara (x0 - 2h) dan (x0 + 2h)\n");
      printf("2. Aproksimasi dengan Psi yang Berada di antara x0 dan (x0 + 4h)\n\n");
      printf("Masukan nomor pilihan: ");
      scanf("%d", &opsi);

      switch(opsi){
            case 1:
                  diferLimaTitik = (func(x_diff - 2*h) - 8*func(x_diff - h) + 8*func(x_diff + h) - func(x_diff + 2*h))/(12*h);
                  printf("Hasil aproksimasi turunan dari titik %0.3f dengan psi yang berada di antara (x0 - 2h) dan (x0 + 2h) adalah %0.7f", x_diff, diferLimaTitik);
                  break;

            case 2:
                  diferLimaTitik = (-25*func(x_diff) + 48*func(x_diff + h) - 36*func(x_diff + 2*h) + 16*func(x_diff + 3*h) - 3*func(x_diff + 4*h))/(12*h);
                  printf("Hasil aproksimasi turunan dari titik %0.3f dengan psi yang berada di antara x0 dan (x0 + 4h) adalah %0.7f", x_diff, diferLimaTitik);
                  break;
      }

}

float derivativeNewton(float x[], int n, float x_diff)
{
      float f[100][100], h, sum = 0.0, sign, first_derivative;
      int i, j, index, num = 0, num_2 = 1;

      printf("Masukan jumlah titik (pasangan x dan f(x)) yang diketahui: ");
      scanf("%d",&n);

      printf("\nMasukan titik yang diketahui (nilai x dan f(x) dipisahkan dengan spasi, contoh: 3 14): \n");
      for(i = 0; i < n; i++)
      {
            scanf ("%f",&x[i]);
            scanf("%f",&f[i][0]);
      }

      printf("\n\nBerikut nilai  x dan f(x) yang dimasukan:\n\n");
      for(i = 0; i < n; i++)
      {
            printf("%0.3f\t%0.7f", x[i], f[i][0]);
            printf("\n");
      }

      printf("\nMasukan nilai x yang akan diestimasi nilai f(x) nya: ");
      scanf("%f", &x_diff);

      for(i = 0; i < n; i++)
      {
            if (fabs(x_diff - x[i]) < 0.0001)
            {
                  index = i;
                  num = 1;
                  break;
            }
      }

      if (num == 0)
      {
            printf("\nNilai x yang dimasukkan tidak valid. Anda keluar dari program.");
            exit(0);
      }

      for(i = 1; i < n; i++)
      {
            for(j = 0; j < n-i; j++)
            {
                  f[j][i] = f[j+1][i-1] - f[j][i-1];
            }
      }

      printf("\nBerikut daftar hasil selisih: ");
      for(i = 1; i < n; i++)
      {
            for(j = 1; j < n-i; j++)
            {
                  printf("%0.7f\t", f[i][j]);
            }
            printf("\n");
      }
      printf("\n");

      h = x[1] - x[0];

      for(i = 1; i < n-index; i++)
      {
            sign = f[index][i]/i;
            sum = sum + num_2*sign;
            num_2 = -num_2;
      }
      first_derivative = sum/h;

      printf("Turunan pertama untuk x = %0.2f adalah %0.7f", x_diff, first_derivative);
}

float numericIntegral(float a, float b, float err[])
{
      float c, midpoint, trapesium, simpson, eksak_solution;

      printf("\nMasukan nilai a: ");
      scanf("%f",&a);
      printf("Masukan nilai b: ");
      scanf("%f",&b);

      c = (a + b)/2;
      eksak_solution = atan(b) - atan(a);

      midpoint = (b - a) * (func(c));
      trapesium = (b - a) * ((func(a) + func(b))/2);
      simpson = (b - a) * ((func(a) + 4*func(c) + func(b))/6);
            
      printf("\nHasil aproksimasi integral fungsi f(x) dengan metode Midpoint adalah %0.7f\n", midpoint);
      printf("Hasil aproksimasi integral fungsi f(x) dengan metode Trapesium adalah %0.7f\n", trapesium);
      printf("Hasil aproksimasi integral fungsi f(x) dengan metode Simpson adalah %0.7f\n\n", simpson);

      err[0] = fabs(eksak_solution - midpoint);
      err[1] = fabs(eksak_solution - trapesium);
      err[2] = fabs(eksak_solution - simpson);
      
      printf("Nilai integral sesungguhnya : %0.7f\n", eksak_solution);
      printf("\n");

      printf("Error absolut untuk metode : \n");
      printf("Midpoint adalah %0.7f\n", err[0]);
      printf("Trapesium adalah %0.7f\n", err[1]);
      printf("Simpson adalah %0.7f\n", err[2]);
      
      printf("\nBerdasarkan hasil di atas, diperoleh:");
      if(err[0] < err[1] && err[0] < err[2])
      {
            printf("\nMetode Midpoint adalah metode yang paling akurat\n");
      }
      else if(err[1] < err[0] && err[1] < err[2])
      {
            printf("\nMetode Trapesium adalah metode yang paling akurat\n");
      }
      else
      {
            printf("\nMetode Simpson adalah metode yang paling akurat\n");
      }
}

int main(){
      float x[100], f_x[100], x_inter, x_diff, a, b, err[3];
      int n, num_menu, opsi, method;
      char next, stay;

      menu:
      system("cls");
      printf("\nAPLIKASI METODE NUMERIK UNTUK APROKSIMASI NILAI FUNGSI, TURUNAN, DAN INTEGRAL\n");
      printf("*****************************************************************************\n\n");
      
      printf("Menu Utama:\n\n");
      printf("1. Aproksimasi Nilai Fungsi\n");
      printf("2. Aproksimasi Turunan Fungsi\n");
      printf("3. Aproksimasi Integral Fungsi\n");
      printf("4. Keluar\n\n");
      printf("Pilihan nomor menu: ");
      scanf("%d",&num_menu);
      system("cls");

      switch(num_menu){
            case 1:
                  printf("\nAPROKSIMASI NILAI FUNGSI\n");
                  printf("************************\n\n");
                  
                  printf("Metode yang digunakan adalah metode Interpolasi Lagrange\n");
                  printf("\nLanjut? (y/n): ");
                  scanf("%s",&next);
                  if(next == 'y'){
                        system("cls");
                        interpolasiLagrange: 
                        system("cls");
                        lagrangeInterpolation(x, f_x, n, x_inter);

                        printf("\n\nUlangi metode ini? (y/n): ");
                        scanf(" %c", &stay);
                        if(stay == 'y'){
                              goto interpolasiLagrange;
                        } else {
                              goto menu;
                        }
                  } else {
                        goto menu;
                  }
                  
                  break;

            case 2:
                  printf("\nAPROKSIMASI TURUNAN FUNGSI\n");
                  printf("**************************\n\n");
                  
                  printf("Metode yang digunakan adalah aproksimasi dengan: \ndua titik, \ntiga titik,\nlima titik, dan \nNewton Forward\n");
                  printf("\nLanjut? (y/n): ");
                  scanf("%s",&next);
                  if(next == 'y'){
                        system("cls");
                        aprokTurunan:
                        system("cls");
                        printf("\nPilih formula:\n");
                        printf("1. Aproksimasi turunan dengan fungsi yang diketahui\n");
                        printf("2. Aproksimasi turunan dengan fungsi yang tidak diketahui\n");
                        printf("3. Kembali ke menu utama\n");
                        printf("\nPilihan nomor: ");
                        scanf("%d",&opsi);
                        system("cls");
                        switch(opsi){
                              case 1:
                                    system("cls");
                                    fungsiDiketahui:
                                    system("cls");
                                    printf("\nAproksimasi Turunan dengan Fungsi yang Diketahui\n");
                                    printf("________________________________________________\n\n");
                                    
                                    printf("Pada aproksimasi ini dilakukan aproksimasi turunan dari fungsi f(x) = 1/(1 + x^2)\n");
                                    printf("\nPilih Metode :\n");
                                    printf("1. Aproksimasi dengan Dua Titik\n");
                                    printf("2. Aproksimasi dengan Tiga Titik\n");
                                    printf("3. Aproksimasi dengan Lima Titik\n");
                                    printf("4. Kembali ke menu sebelumnya\n");
                                    printf("\nPilihan nomor : ");
                                    scanf("%d",&method);
                                    system("cls");
                                    switch(method){
                                          case 1:
                                                system("cls");
                                                aprokDuaTitik:
                                                system("cls");
                                                diffDuaTitik(f_x, x, n, x_diff);
                                                printf("\n\nUlangi metode ini? (y/n): ");
                                                scanf(" %c", &stay);
                                                if(stay == 'y'){
                                                      goto aprokDuaTitik;
                                                } else {
                                                      goto fungsiDiketahui;
                                                }
                                                break;
                                          case 2:
                                                system("cls");
                                                aprokTigaTitik:
                                                system("cls");
                                                diffTigaTitik(f_x, x, n, x_diff);
                                                printf("\n\nUlangi metode ini? (y/n): ");
                                                scanf(" %c", &stay);
                                                if(stay == 'y'){
                                                      goto aprokTigaTitik;
                                                } else {
                                                      goto fungsiDiketahui;
                                                }
                                                break;
                                          case 3:
                                                system("cls");
                                                aprokLimaTitik:
                                                system("cls");
                                                diffLimaTitik(f_x, x, n, x_diff);
                                                printf("\n\nUlangi metode ini? (y/n): ");
                                                scanf(" %c", &stay);
                                                if(stay == 'y'){
                                                      goto aprokLimaTitik;
                                                } else {
                                                      goto fungsiDiketahui;
                                                }
                                                break;
                                          case 4:
                                                goto aprokTurunan;
                                                break;
                                    }
                                    break;
                              case 2:
                                    system("cls");
                                    fungsiTidakDiketahui:
                                    system("cls");
                                    printf("\nAproksimasi Turunan Dengan Fungsi yang Tidak Diketahui\n");
                                    printf("______________________________________________________\n\n");
                                    printf("Metode yang digunakan adalah metode Newton Forward\n\n");
                                    derivativeNewton(x, n, x_diff);
                                    printf("\n\nUlangi metode ini? (y/n): ");
                                    scanf(" %c", &stay);
                                    if(stay == 'y'){
                                          goto fungsiTidakDiketahui;
                                    } else {
                                          goto aprokTurunan;
                                    }
                                    break;
                              case 3:
                                    goto menu;
                                    break;
                        } 
                  } else {
                        goto menu;
                  }
                  break;

            case 3:
                  printf("\nAPROKSIMASI INTEGRAL FUNGSI\n");
                  printf("***************************\n\n");
                  printf("Pada aproksimasi ini dilakukan aproksimasi turunan dari fungsi f(x) = 1/(1 + x^2) dengan metode:\nTitik tengah (Midpoint), \nTrapesium, dan \nSimpson\n");
                  printf("\nLanjut? (y/n): ");
                  scanf("%s",&next);
                  if(next == 'y'){
                        system("cls");
                        integralNumerik:
                        system("cls");
                        numericIntegral(a, b, err);

                        printf("\nUlangi metode ini? (y/n): ");
                        scanf(" %c", &stay);
                        if(stay == 'y'){
                              goto integralNumerik;
                        } else {
                              goto menu;
                        }
                  } else {
                        goto menu;
                  }
                  break;

            case 4:
                  printf("\nAnda keluar dari aplikasi\n");
                  exit(0);
      }
      return 0;
}
